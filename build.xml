<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="silyan-helper" default="dist-production" basedir=".">
	<description>Library with helpers used in variose applications.</description>
	
	<!-- set global properties for this build -->
	<property file="./build.properties"/>
	
	<target name="dist-production">
		<property name="environment" value="production" />
		<antcall target="dist" />
	</target>
	
	<target name="dist-development">
		<property name="environment" value="development" />
		<antcall target="dist" />
	</target>

	<target name="dist-test">
		<property name="environment" value="test" />
		<antcall target="dist" />
	</target>

	<target name="init">
		
		<property name="ivy.default.ivy.user.dir" value="${basedir}/ivy"></property>
		
		<!-- Create the time stamp . Access using ${DSTAMP} -->
		<tstamp />
		
		<!-- Si no se especifica el entorno, se establece a "development" -->
		<condition property="environment" value="development" >
			<not><isset property="environment"/></not>
		</condition>
		
		<!-- Create the build directory structure used by compile -->
		<delete dir="${build}/${environment}" failonerror="false" />
		<mkdir dir="${build}/${environment}" />
		<delete dir="${dist}/${environment}" failonerror="false" />
		<mkdir dir="${dist}/${environment}" />
	</target>

	
	<!-- Inicio fase de compilación. -->
	<target name="compile" depends="init" description="compile the source ">
		<ivy:cachepath pathid="default.classpath" conf="compile"></ivy:cachepath>
		
		<javac srcdir="${src}" destdir="${build}/${environment}" includeantruntime="false" debug="true" debuglevel="lines,vars,source" classpathref="default.classpath" >
		</javac>
		<copy overwrite="true" todir="${build}/${environment}">
			<fileset dir="${conf}/commons" includes="**/*"/>
			<fileset dir="${conf}/${environment}" includes="**/*"/>
		</copy>
	</target>
	
	
	<!-- Inicio fase de empaquetado para su distribución. -->
	<target name="dist" depends="compile" description="generate the distribution">
		
		<replace dir="${build}/${environment}" token="@@@VERSION@@@" value="${project.version}"/>
		
		<!-- Creamos el jar. -->
		<jar jarfile="${dist}/${environment}/${project.name}-${project.version}.jar" basedir="${build}/${environment}" manifest="${build}/${environment}/META-INF/MANIFEST.MF">
			<!-- TODO: META-INF -->
		</jar>

		<jar jarfile="${dist}/${environment}/${project.name}-${project.version}-source.jar">
			<fileset dir="${src}" includes="**/*.java"/>
			<fileset dir="${conf}/commons" includes="**/*"/>
			<fileset dir="${conf}/${environment}" includes="**/*" excludes=".push_empty_folder"/>
		</jar>
		
		<!-- Copy Dependencies. -->
		<mkdir dir="${dist}/${environment}/lib"/>
		<ivy:retrieve sync="true" pattern="${dist}/${environment}/lib/[artifact]-[revision](-[classifier]).[ext]" type="jar,bundle" conf="default" />
		
	</target>

	<!-- Limpiamos los directorios generados. -->
	<target name="clean" description="clean up">
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>
	
</project>
